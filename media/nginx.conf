user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=my_cache:10m inactive=60m;

    server {
        listen 80;
        server_name minio.guliguli.space;  # 建议为 MinIO 分配独立域名或子域名

        location / {
            proxy_pass http://minio:5003;
            proxy_cache my_cache;
            proxy_cache_key "$scheme$host$uri";  # 忽略查询参数（如 ?X-Amz-Signature），因为我们只有一个用户所以没问题
            proxy_ignore_headers "Set-Cookie";   # 忽略可能干扰的头部
            proxy_cache_valid 200 1h;            # 缓存1小时
        }
    }
    server {
        listen 80;
        server_name minio-console.guliguli.space;  # 建议为 MinIO 分配独立域名或子域名

        location / {
            proxy_pass http://minio:5004;
        }
    }

    server {
        listen 80;
        server_name media.guliguli.space;  # Flask 的域名

        location / {
            proxy_pass http://media_processor:4850;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}